dnl TODO: Basename determination: output filename, or input filename, or nothing.

dnl Make somehow sure that the program name is translated to a valid shell function identifier
m4_define([_TRANSLATE_BAD_CHARS], [m4_translit([[$1]], [-.], [__])])


dnl $1: The macro call (the caller is supposed to pass [$0($@)])
dnl What is also part of the API: The line
dnl ### START OF CODE GENERATED BY Argbash vx.y.z one line above ###
m4_define([ARGBASH_GO_BASE], [m4_do(
	[m4_ifnblank([$1], [[$1
]])],
	[dnl ASSERT_THAT_BASENAME_IS_KNOWN
],
	[m4_define([_BASENAME], INFERRED_BASENAME_NOERROR)],
	[m4_define([_PROGRAM_NAME], m4_dquote(_BASENAME))],
	[m4_define([_FUNCTION_NAME], m4_dquote(_[]_TRANSLATE_BAD_CHARS(_PROGRAM_NAME)))],
	[[#!/bin/bash

]],
	[[# Put this file to /etc/bash_completion.d/]_BASENAME
],
	[[# needed because of Argbash --> m4_ignore@{:@@<:@
]],
	[_ARGBASH_ID
],
	[[# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info

]],
	[_IF_SOME_ARGS_ARE_DEFINED([m4_do(
		[GENERATE_COMPLETION_FUNCTION(_FUNCTION_NAME)
],
		[complete -F _FUNCTION_NAME _PROGRAM_NAME
],
	)])],
	[[### END OF CODE GENERATED BY Argbash (sortof) ### @:>@@:}@]],
)])


dnl
dnl Identify the Argbash version (this is part of the API)
m4_define([_ARGBASH_ID],
	[### START OF CODE GENERATED BY Argbash v]_ARGBASH_VERSION[ one line above ###])


dnl
dnl $1: Basename
m4_define([GENERATE_COMPLETION_FUNCTION], [m4_do(
	[[$1 ()
{
]],
	[_JOIN_INDENTED(1,
		[local cur prev opts base],
		[COMPREPLY=()],
		[[cur="${COMP_WORDS[COMP_CWORD]}"]],
		[[prev="${COMP_WORDS[COMP_CWORD-1]}"]],
		[all_long_opts="m4_lists_foreach_optional([_ARGS_LONG], [_argname],
			[--_argname ])"],
		[all_short_opts="m4_lists_foreach_optional([_ARGS_SHORT], [_arg_short],
			[m4_ifnblank(_arg_short, [-_arg_short ])])"],
		[case "$cur" in],
		[_INDENT_()--*@:}@],
		[_INDENT_(2)COMPREPLY=( $(compgen -W "${all_long_opts}" -- ${cur}) )],
		[_INDENT_(2)return 0],
		[_INDENT_(2);;],
		[_INDENT_()-*@:}@],
		[_INDENT_(2)COMPREPLY=( $(compgen -W "${all_short_opts}" -- ${cur}) )],
		[_INDENT_(2)return 0],
		[_INDENT_(2);;],
		[esac],
	)],
[
}],
)])
